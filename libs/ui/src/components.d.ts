/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Color,
} from './interface';

export namespace Components {
  interface HiveUiLabel {
    'alignCenter': boolean;
    'alignLeft': boolean;
    'alignRight': boolean;
    'base': boolean;
    'bold': boolean;
    'book': boolean;
    'capitalize': boolean;
    /**
    * The primary color of the label. Uses the branded CSS variables that are globally available to the application.
    */
    'color': Color;
    'heading': boolean;
    'lg': boolean;
    'lowercase': boolean;
    /**
    * The maximum lines to display before truncating the text. Default behavior shows all lines of text with no truncation.
    */
    'maxLines': number;
    'medium': boolean;
    'semibold': boolean;
    'sm': boolean;
    'uppercase': boolean;
    'xbold': boolean;
    'xl': boolean;
    'xs': boolean;
    'xxl': boolean;
    'xxs': boolean;
  }
  interface SbAppColorTiles {}
  interface SbColorTile {
    /**
    * The cmyk value to render.
    */
    'cmyk': string;
    /**
    * The hex value to render.
    */
    'hex': string;
    /**
    * The hsl value to render.
    */
    'hsl': string;
    /**
    * `true` if the color tile should attempt to detect the name from an external API.
    */
    'nameDetect': boolean;
    /**
    * The rgb value to render.
    */
    'rgb': string;
    /**
    * The CSS variable to attempt to render.
    */
    'variable': string;
  }
  interface SbContainer {}
  interface SbSearchBar {
    /**
    * The target selector to apply the search filtering against.
    */
    'target': string;
  }
}

declare global {


  interface HTMLHiveUiLabelElement extends Components.HiveUiLabel, HTMLStencilElement {}
  var HTMLHiveUiLabelElement: {
    prototype: HTMLHiveUiLabelElement;
    new (): HTMLHiveUiLabelElement;
  };

  interface HTMLSbAppColorTilesElement extends Components.SbAppColorTiles, HTMLStencilElement {}
  var HTMLSbAppColorTilesElement: {
    prototype: HTMLSbAppColorTilesElement;
    new (): HTMLSbAppColorTilesElement;
  };

  interface HTMLSbColorTileElement extends Components.SbColorTile, HTMLStencilElement {}
  var HTMLSbColorTileElement: {
    prototype: HTMLSbColorTileElement;
    new (): HTMLSbColorTileElement;
  };

  interface HTMLSbContainerElement extends Components.SbContainer, HTMLStencilElement {}
  var HTMLSbContainerElement: {
    prototype: HTMLSbContainerElement;
    new (): HTMLSbContainerElement;
  };

  interface HTMLSbSearchBarElement extends Components.SbSearchBar, HTMLStencilElement {}
  var HTMLSbSearchBarElement: {
    prototype: HTMLSbSearchBarElement;
    new (): HTMLSbSearchBarElement;
  };
  interface HTMLElementTagNameMap {
    'hive-ui-label': HTMLHiveUiLabelElement;
    'sb-app-color-tiles': HTMLSbAppColorTilesElement;
    'sb-color-tile': HTMLSbColorTileElement;
    'sb-container': HTMLSbContainerElement;
    'sb-search-bar': HTMLSbSearchBarElement;
  }
}

declare namespace LocalJSX {
  interface HiveUiLabel extends JSXBase.HTMLAttributes<HTMLHiveUiLabelElement> {
    'alignCenter'?: boolean;
    'alignLeft'?: boolean;
    'alignRight'?: boolean;
    'base'?: boolean;
    'bold'?: boolean;
    'book'?: boolean;
    'capitalize'?: boolean;
    /**
    * The primary color of the label. Uses the branded CSS variables that are globally available to the application.
    */
    'color'?: Color;
    'heading'?: boolean;
    'lg'?: boolean;
    'lowercase'?: boolean;
    /**
    * The maximum lines to display before truncating the text. Default behavior shows all lines of text with no truncation.
    */
    'maxLines'?: number;
    'medium'?: boolean;
    'semibold'?: boolean;
    'sm'?: boolean;
    'uppercase'?: boolean;
    'xbold'?: boolean;
    'xl'?: boolean;
    'xs'?: boolean;
    'xxl'?: boolean;
    'xxs'?: boolean;
  }
  interface SbAppColorTiles extends JSXBase.HTMLAttributes<HTMLSbAppColorTilesElement> {}
  interface SbColorTile extends JSXBase.HTMLAttributes<HTMLSbColorTileElement> {
    /**
    * The cmyk value to render.
    */
    'cmyk'?: string;
    /**
    * The hex value to render.
    */
    'hex'?: string;
    /**
    * The hsl value to render.
    */
    'hsl'?: string;
    /**
    * `true` if the color tile should attempt to detect the name from an external API.
    */
    'nameDetect'?: boolean;
    /**
    * The rgb value to render.
    */
    'rgb'?: string;
    /**
    * The CSS variable to attempt to render.
    */
    'variable'?: string;
  }
  interface SbContainer extends JSXBase.HTMLAttributes<HTMLSbContainerElement> {}
  interface SbSearchBar extends JSXBase.HTMLAttributes<HTMLSbSearchBarElement> {
    /**
    * The target selector to apply the search filtering against.
    */
    'target'?: string;
  }

  interface IntrinsicElements {
    'hive-ui-label': HiveUiLabel;
    'sb-app-color-tiles': SbAppColorTiles;
    'sb-color-tile': SbColorTile;
    'sb-container': SbContainer;
    'sb-search-bar': SbSearchBar;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


